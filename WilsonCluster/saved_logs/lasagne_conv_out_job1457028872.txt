PBS prologue
Job mnv-conv-1457028872 submitted from mic.fnal.gov started Thu Mar 3 12:14:33 CST 2016 jobid 106443.tev.fnal.gov
gpu1
PBS_O_WORKDIR is /home/perdue/ANNMINERvA/WilsonCluster
Git repo version is 1f709a67579f-dirty
Git repo contains uncomitted changes! Please commit your changes
before submitting a job. If you feel your changes are experimental,
just use a feature branch.

Changed files:
WilsonCluster/job_lasagne_conv_mlp.sh

Using gpu device 0: Tesla K20m (CNMeM is disabled)
/usr/local/python2/lib/python2.7/site-packages/theano/tensor/signal/downsample.py:5: UserWarning: downsample module has been moved to the pool module.
  warnings.warn("downsample module has been moved to the pool module.")
Starting...
minerva_triamese_beta.py
 Begin with saved parameters? False
 Saved parameters file: ./lminervatriamese_beta1457028873.npz
 Saved parameters file exists? False
 Dataset: /phihome/perdue/theano/data/minosmatch_fuel_me1Bmc.hdf5
 Dataset size: 2012053581
 Planned number of epochs: 1
 Learning rate: 0.005
 Momentum: 0.9
 L2 regularization penalty scale: 0.0001
 Batch size: 500
Loading data...
 Learning sample size = 1346140 examples
 Validation sample size = 168268 examples
Convpool 0 params: {'filter_size': (5, 5), 'pool_size': (2, 2), 'nfilters': 16}
Convpool 1 params: {'filter_size': (4, 4), 'pool_size': (2, 2), 'nfilters': 12}
Convpool 2 params: {'filter_size': (3, 3), 'pool_size': (2, 2), 'nfilters': 8}

In -->         Layer    --> Out    Description                                                  
-------        -----    -------    -----------                                                  
[]             0        [1]        <lasagne.layers.input.InputLayer object at 0x2b805975cb10>   
[0]            1        [2]        <lasagne.layers.conv.Conv2DLayer object at 0x2b805975cc10>   
[1]            2        [3]        <lasagne.layers.pool.MaxPool2DLayer object at 0x2b805975cc50>
[2]            3        [4]        <lasagne.layers.conv.Conv2DLayer object at 0x2b8059782c10>   
[3]            4        [5]        <lasagne.layers.pool.MaxPool2DLayer object at 0x2b805975cc90>
[4]            5        [6]        <lasagne.layers.conv.Conv2DLayer object at 0x2b8059782ed0>   
[5]            6        [7]        <lasagne.layers.pool.MaxPool2DLayer object at 0x2b8059782c50>
[6]            7        [8]        <lasagne.layers.noise.DropoutLayer object at 0x2b805975cbd0> 
[7]            8        [27]       <lasagne.layers.dense.DenseLayer object at 0x2b8035b1a1d0>   
[]             9        [10]       <lasagne.layers.input.InputLayer object at 0x2b805975cb50>   
[9]            10       [11]       <lasagne.layers.conv.Conv2DLayer object at 0x2b8035b1a850>   
[10]           11       [12]       <lasagne.layers.pool.MaxPool2DLayer object at 0x2b8035b1a810>
[11]           12       [13]       <lasagne.layers.conv.Conv2DLayer object at 0x2b8035b1ab10>   
[12]           13       [14]       <lasagne.layers.pool.MaxPool2DLayer object at 0x2b8035b1a7d0>
[13]           14       [15]       <lasagne.layers.conv.Conv2DLayer object at 0x2b8035b1add0>   
[14]           15       [16]       <lasagne.layers.pool.MaxPool2DLayer object at 0x2b8035b1ab50>
[15]           16       [17]       <lasagne.layers.noise.DropoutLayer object at 0x2b8035b1a210> 
[16]           17       [27]       <lasagne.layers.dense.DenseLayer object at 0x2b8035b250d0>   
[]             18       [19]       <lasagne.layers.input.InputLayer object at 0x2b805975cb90>   
[18]           19       [20]       <lasagne.layers.conv.Conv2DLayer object at 0x2b8035b253d0>   
[19]           20       [21]       <lasagne.layers.pool.MaxPool2DLayer object at 0x2b8035b25390>
[20]           21       [22]       <lasagne.layers.conv.Conv2DLayer object at 0x2b8035b25690>   
[21]           22       [23]       <lasagne.layers.pool.MaxPool2DLayer object at 0x2b8035b25350>
[22]           23       [24]       <lasagne.layers.conv.Conv2DLayer object at 0x2b8035b25950>   
[23]           24       [25]       <lasagne.layers.pool.MaxPool2DLayer object at 0x2b8035b256d0>
[24]           25       [26]       <lasagne.layers.noise.DropoutLayer object at 0x2b8035b25110> 
[25]           26       [27]       <lasagne.layers.dense.DenseLayer object at 0x2b8035b25c10>   
[8, 17, 26]    27       [28]       <lasagne.layers.merge.ConcatLayer object at 0x2b8035b25c50>  
[27]           28       [29]       <lasagne.layers.noise.DropoutLayer object at 0x2b8035b25ed0> 
[28]           29       [30]       <lasagne.layers.dense.DenseLayer object at 0x2b8035b25e90>   
[29]           30       [31]       <lasagne.layers.noise.DropoutLayer object at 0x2b8035b25f50> 
[30]           31       []         <lasagne.layers.dense.DenseLayer object at 0x2b8035b33290>   

        ////
        Use AdaGrad update schedule for learning rate, see Duchi, Hazan, and
        Singer (2011) "Adaptive subgradient methods for online learning and
        stochasitic optimization." JMLR, 12:2121-2159
        ////
        

        ////
        Apply Nesterov momentum using Lisa Lab's modifications.
        ////
        
Starting training...
  Loading slice (0, 50000) took 8.879s.
  -Iterating over the slice took 70.411s.
  Loading slice (50000, 100000) took 8.872s.
  -Iterating over the slice took 70.368s.
  Loading slice (100000, 150000) took 8.771s.
  -Iterating over the slice took 70.341s.
  Loading slice (150000, 200000) took 8.815s.
  -Iterating over the slice took 70.351s.
  Loading slice (200000, 250000) took 8.972s.
  -Iterating over the slice took 70.371s.
  Loading slice (250000, 300000) took 8.789s.
  -Iterating over the slice took 70.377s.
  Loading slice (300000, 350000) took 8.914s.
  -Iterating over the slice took 70.374s.
  Loading slice (350000, 400000) took 8.747s.
  -Iterating over the slice took 70.370s.
  Loading slice (400000, 450000) took 8.853s.
  -Iterating over the slice took 70.358s.
  Loading slice (450000, 500000) took 8.868s.
  -Iterating over the slice took 70.420s.
  Loading slice (500000, 550000) took 8.787s.
  -Iterating over the slice took 70.425s.
  Loading slice (550000, 600000) took 8.866s.
  -Iterating over the slice took 70.456s.
  Loading slice (600000, 650000) took 8.762s.
  -Iterating over the slice took 70.750s.
  Loading slice (650000, 700000) took 8.852s.
  -Iterating over the slice took 70.411s.
  Loading slice (700000, 750000) took 8.794s.
  -Iterating over the slice took 70.503s.
  Loading slice (750000, 800000) took 8.810s.
  -Iterating over the slice took 70.437s.
  Loading slice (800000, 850000) took 8.780s.
  -Iterating over the slice took 70.380s.
  Loading slice (850000, 900000) took 8.911s.
  -Iterating over the slice took 70.362s.
  Loading slice (900000, 950000) took 8.768s.
  -Iterating over the slice took 70.484s.
  Loading slice (950000, 1000000) took 8.831s.
  -Iterating over the slice took 70.439s.
  Loading slice (1000000, 1050000) took 8.927s.
  -Iterating over the slice took 70.369s.
  Loading slice (1050000, 1100000) took 9.137s.
  -Iterating over the slice took 70.366s.
  Loading slice (1100000, 1150000) took 8.843s.
  -Iterating over the slice took 70.370s.
  Loading slice (1150000, 1200000) took 8.801s.
  -Iterating over the slice took 70.382s.
  Loading slice (1200000, 1250000) took 8.920s.
  -Iterating over the slice took 70.353s.
  Loading slice (1250000, 1300000) took 8.952s.
  -Iterating over the slice took 70.375s.
  Loading slice (1300000, 1346140) took 8.138s.
  -Iterating over the slice took 65.011s.
  The validation pass took 93.537s.
Epoch 1 of 1 took 2227.786s
  training loss:		0.891507
  validation loss:		0.787139
  validation accuracy:		75.16 %
---
Finished 1 epochs.
Using gpu device 0: Tesla K20m (CNMeM is disabled)
/usr/local/python2/lib/python2.7/site-packages/theano/tensor/signal/downsample.py:5: UserWarning: downsample module has been moved to the pool module.
  warnings.warn("downsample module has been moved to the pool module.")
Starting...
minerva_triamese_beta.py
 Begin with saved parameters? False
 Saved parameters file: ./lminervatriamese_beta1457028873.npz
 Saved parameters file exists? True
 Dataset: /phihome/perdue/theano/data/minosmatch_fuel_me1Bmc.hdf5
 Dataset size: 2012053581
 Planned number of epochs: 1
 Learning rate: 0.005
 Momentum: 0.9
 L2 regularization penalty scale: 0.0001
 Batch size: 500
Loading data for testing...
 Testing sample size = 168268 examples
Convpool 0 params: {'filter_size': (5, 5), 'pool_size': (2, 2), 'nfilters': 16}
Convpool 1 params: {'filter_size': (4, 4), 'pool_size': (2, 2), 'nfilters': 12}
Convpool 2 params: {'filter_size': (3, 3), 'pool_size': (2, 2), 'nfilters': 8}
Starting testing...
  Loading slice (0, 50000) took 8.840s.
  -Iterating over the slice took 418.135s.
  Loading slice (50000, 100000) took 8.848s.
  -Iterating over the slice took 417.964s.
  Loading slice (100000, 150000) took 8.826s.
  -Iterating over the slice took 417.938s.
  Loading slice (150000, 168268) took 3.390s.
  -Iterating over the slice took 152.498s.
Final results:
  test loss:			0.781453
  test accuracy:		75.48 %
   target 1 accuracy:			93.107 %
   target 2 accuracy:			85.502 %
   target 3 accuracy:			80.388 %
   target 4 accuracy:			78.636 %
   target 5 accuracy:			81.091 %
Job mnv-conv-1457028872 submitted from mic.fnal.gov finished Thu Mar 3 13:18:38 CST 2016 jobid 106443.tev.fnal.gov
PBS epilogue
