PBS prologue
Job lasagne-conv-mnv submitted from mic.fnal.gov started Thu Feb 18 11:23:59 CST 2016 jobid 105127.tev.fnal.gov
gpu1
PBS_O_WORKDIR is /home/perdue/ANNMINERvA/WilsonCluster
Git repo version is db43638c5257-dirty
Git repo contains uncomitted changes! Please commit your changes
before submitting a job. If you feel your changes are experimental,
just use a feature branch.

Changed files:
Lasagne/lasagne_triamese_minerva.py
WilsonCluster/job_lasagne_conv_mlp.sh

Using gpu device 0: Tesla K20m (CNMeM is disabled)
/usr/local/python2/lib/python2.7/site-packages/theano/tensor/signal/downsample.py:5: UserWarning: downsample module has been moved to the pool module.
  warnings.warn("downsample module has been moved to the pool module.")
Starting...
 Begin with saved parameters? False
 Saved parameters file: ./lminervatriamese_model1455816239.npz
 Saved parameters file exists? False
 Dataset: /phihome/perdue/theano/data/skim_data_convnet_small.hdf5
 Dataset size: 120041441
 Planned number of epochs: 2
 Learning rate: 0.01
 Momentum: 0.9
 L2 regularization penalty scale: 0.0001
Loading data...
Learning data size: (79775, 3, 50, 50)

In -->         Layer    --> Out    Description                                                  
-------        -----    -------    -----------                                                  
[]             0        [1]        <lasagne.layers.input.InputLayer object at 0x2b317b877890>   
[0]            1        [2]        <lasagne.layers.conv.Conv2DLayer object at 0x2b317b877990>   
[1]            2        [3]        <lasagne.layers.pool.MaxPool2DLayer object at 0x2b317b877950>
[2]            3        [4]        <lasagne.layers.conv.Conv2DLayer object at 0x2b317b896e10>   
[3]            4        [5]        <lasagne.layers.pool.MaxPool2DLayer object at 0x2b317b896e90>
[4]            5        [6]        <lasagne.layers.noise.DropoutLayer object at 0x2b322dd456d0> 
[5]            6        [21]       <lasagne.layers.dense.DenseLayer object at 0x2b322dd45710>   
[]             7        [8]        <lasagne.layers.input.InputLayer object at 0x2b317b8778d0>   
[7]            8        [9]        <lasagne.layers.conv.Conv2DLayer object at 0x2b317b8779d0>   
[8]            9        [10]       <lasagne.layers.pool.MaxPool2DLayer object at 0x2b317b896bd0>
[9]            10       [11]       <lasagne.layers.conv.Conv2DLayer object at 0x2b317b896ed0>   
[10]           11       [12]       <lasagne.layers.pool.MaxPool2DLayer object at 0x2b322dd45410>
[11]           12       [13]       <lasagne.layers.noise.DropoutLayer object at 0x2b322dd45750> 
[12]           13       [21]       <lasagne.layers.dense.DenseLayer object at 0x2b322dd45dd0>   
[]             14       [15]       <lasagne.layers.input.InputLayer object at 0x2b317b877910>   
[14]           15       [16]       <lasagne.layers.conv.Conv2DLayer object at 0x2b317b896950>   
[15]           16       [17]       <lasagne.layers.pool.MaxPool2DLayer object at 0x2b317b896e50>
[16]           17       [18]       <lasagne.layers.conv.Conv2DLayer object at 0x2b322dd451d0>   
[17]           18       [19]       <lasagne.layers.pool.MaxPool2DLayer object at 0x2b322dd45690>
[18]           19       [20]       <lasagne.layers.noise.DropoutLayer object at 0x2b322dd45d50> 
[19]           20       [21]       <lasagne.layers.dense.DenseLayer object at 0x2b322dd4f110>   
[6, 13, 20]    21       [22]       <lasagne.layers.merge.ConcatLayer object at 0x2b322dd4f090>  
[21]           22       [23]       <lasagne.layers.noise.DropoutLayer object at 0x2b322dd4f3d0> 
[22]           23       []         <lasagne.layers.dense.DenseLayer object at 0x2b322dd4f390>   

    ////
    Use AdaGrad update schedule for learning rate, see Duchi, Hazan, and
    Singer (2011) "Adaptive subgradient methods for online learning and
    stochasitic optimization." JMLR, 12:2121-2159
    ////
    

    ////
    Apply Nesterov momentum using Lisa Lab's modifications. 
    ////
    
Starting training...
Epoch 1 of 2 took 135.060s
  training loss:		1.848251
  validation loss:		0.750505
  validation accuracy:		75.86 %
Epoch 2 of 2 took 135.449s
  training loss:		1.103667
  validation loss:		0.683008
  validation accuracy:		77.76 %
Final results:
  test loss:			0.675793
  test accuracy:		78.23 %
Using gpu device 0: Tesla K20m (CNMeM is disabled)
/usr/local/python2/lib/python2.7/site-packages/theano/tensor/signal/downsample.py:5: UserWarning: downsample module has been moved to the pool module.
  warnings.warn("downsample module has been moved to the pool module.")
Starting...
 Begin with saved parameters? False
 Saved parameters file: ./lminervatriamese_model1455816239.npz
 Saved parameters file exists? True
 Dataset: /phihome/perdue/theano/data/skim_data_convnet_small.hdf5
 Dataset size: 120041441
 Planned number of epochs: 2
 Learning rate: 0.01
 Momentum: 0.9
 L2 regularization penalty scale: 0.0001
Loading data for prediction...
Learning data size: (79775, 3, 50, 50)
Final results:
  test loss:			0.675793
  test accuracy:		78.23 %
   target 1 accuracy:			80.134 %
   target 2 accuracy:			83.037 %
   target 3 accuracy:			75.979 %
   target 4 accuracy:			65.709 %
   target 5 accuracy:			73.940 %
PBS epilogue
