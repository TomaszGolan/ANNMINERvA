PBS prologue
Job mnv-conv-1456245344 submitted from mic.fnal.gov started Tue Feb 23 10:35:45 CST 2016 jobid 105458.tev.fnal.gov
gpu1
PBS_O_WORKDIR is /home/perdue/ANNMINERvA/WilsonCluster
Git repo version is 708420b6021f-dirty
Git repo contains uncomitted changes! Please commit your changes
before submitting a job. If you feel your changes are experimental,
just use a feature branch.

Changed files:
WilsonCluster/job_lasagne_conv_mlp.sh

Using gpu device 0: Tesla K20m (CNMeM is disabled)
/usr/local/python2/lib/python2.7/site-packages/theano/tensor/signal/downsample.py:5: UserWarning: downsample module has been moved to the pool module.
  warnings.warn("downsample module has been moved to the pool module.")
Starting...
 Begin with saved parameters? False
 Saved parameters file: ./lminervatriamese_model1456245345.npz
 Saved parameters file exists? False
 Dataset: /phihome/perdue/theano/data/convdata_fuel_117200_117201.hdf5
 Dataset size: 1317768430
 Planned number of epochs: 2
 Learning rate: 0.005
 Momentum: 0.9
 L2 regularization penalty scale: 0.0001
 Batch size: 500
Loading data...

In -->         Layer    --> Out    Description                                                  
-------        -----    -------    -----------                                                  
[]             0        [1]        <lasagne.layers.input.InputLayer object at 0x2ad3c901a990>   
[0]            1        [2]        <lasagne.layers.conv.Conv2DLayer object at 0x2ad3c901aa90>   
[1]            2        [3]        <lasagne.layers.pool.MaxPool2DLayer object at 0x2ad3c901aa50>
[2]            3        [4]        <lasagne.layers.conv.Conv2DLayer object at 0x2ad3c9042f10>   
[3]            4        [5]        <lasagne.layers.pool.MaxPool2DLayer object at 0x2ad3c9042f90>
[4]            5        [6]        <lasagne.layers.noise.DropoutLayer object at 0x2ad3c9051810> 
[5]            6        [21]       <lasagne.layers.dense.DenseLayer object at 0x2ad3c9051850>   
[]             7        [8]        <lasagne.layers.input.InputLayer object at 0x2ad3c901a9d0>   
[7]            8        [9]        <lasagne.layers.conv.Conv2DLayer object at 0x2ad3c901aad0>   
[8]            9        [10]       <lasagne.layers.pool.MaxPool2DLayer object at 0x2ad3c9042cd0>
[9]            10       [11]       <lasagne.layers.conv.Conv2DLayer object at 0x2ad3c9042fd0>   
[10]           11       [12]       <lasagne.layers.pool.MaxPool2DLayer object at 0x2ad3c9051550>
[11]           12       [13]       <lasagne.layers.noise.DropoutLayer object at 0x2ad3c9051890> 
[12]           13       [21]       <lasagne.layers.dense.DenseLayer object at 0x2ad3c9051f10>   
[]             14       [15]       <lasagne.layers.input.InputLayer object at 0x2ad3c901aa10>   
[14]           15       [16]       <lasagne.layers.conv.Conv2DLayer object at 0x2ad3c9042a50>   
[15]           16       [17]       <lasagne.layers.pool.MaxPool2DLayer object at 0x2ad3c9042f50>
[16]           17       [18]       <lasagne.layers.conv.Conv2DLayer object at 0x2ad3c90512d0>   
[17]           18       [19]       <lasagne.layers.pool.MaxPool2DLayer object at 0x2ad3c90517d0>
[18]           19       [20]       <lasagne.layers.noise.DropoutLayer object at 0x2ad3c9051e90> 
[19]           20       [21]       <lasagne.layers.dense.DenseLayer object at 0x2ad3c905d250>   
[6, 13, 20]    21       [22]       <lasagne.layers.merge.ConcatLayer object at 0x2ad3c905d1d0>  
[21]           22       [23]       <lasagne.layers.noise.DropoutLayer object at 0x2ad3c905d510> 
[22]           23       []         <lasagne.layers.dense.DenseLayer object at 0x2ad3c905d4d0>   

        ////
        Use AdaGrad update schedule for learning rate, see Duchi, Hazan, and
        Singer (2011) "Adaptive subgradient methods for online learning and
        stochasitic optimization." JMLR, 12:2121-2159
        ////
        

        ////
        Apply Nesterov momentum using Lisa Lab's modifications.
        ////
        
Starting training...
Preparing training data:
-Preparing shuffled datastream for 878675 examples.
Preparing validation data:
-Preparing shuffled datastream for 109834 examples.
Epoch 1 of 2 took 26466.682s
  training loss:		0.878768
  validation loss:		0.678633
  validation accuracy:		81.13 %
Epoch 2 of 2 took 26407.994s
  training loss:		0.743162
  validation loss:		0.656480
  validation accuracy:		81.38 %
Finished 2 epochs.
Using gpu device 0: Tesla K20m (CNMeM is disabled)
/usr/local/python2/lib/python2.7/site-packages/theano/tensor/signal/downsample.py:5: UserWarning: downsample module has been moved to the pool module.
  warnings.warn("downsample module has been moved to the pool module.")
Starting...
 Begin with saved parameters? False
 Saved parameters file: ./lminervatriamese_model1456245345.npz
 Saved parameters file exists? True
 Dataset: /phihome/perdue/theano/data/convdata_fuel_117200_117201.hdf5
 Dataset size: 1317768430
 Planned number of epochs: 2
 Learning rate: 0.005
 Momentum: 0.9
 L2 regularization penalty scale: 0.0001
 Batch size: 500
Loading data for prediction...
Preparing test data:
-Preparing sequential datastream for 109835 examples.
Final results:
  test loss:			0.658984
  test accuracy:		81.37 %
   target 1 accuracy:			79.513 %
   target 2 accuracy:			80.845 %
   target 3 accuracy:			81.923 %
   target 4 accuracy:			71.325 %
   target 5 accuracy:			78.607 %
PBS epilogue
